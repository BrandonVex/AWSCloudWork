Application Load Balancer (V2)

Application Load Balancer is on Layer 7 (HTTP)
Load balancing to multiple HTTP applications across machines (target groups)
Load balancing to  multiple applications on the same machine (containers)
support for HTTP/2 and Websocket
Support redirects (from HTTP to HTTPS)
Routing tables to different target groups
  routing based on the path in URL (/users & /posts)
  routing based on hostname in URL (one.example.com & other.ex.com)
  routing based on Query strings, headers (id=123&order=false)
ALB are great for micro services & container-based applications
Has a port mapping feature to redirect to a dynamic port in ECS

--------------------------------
Target groups

EC2 instances (can be managed by an auto scaling group) - HTTP
ECS tasks (managed by ECS itself) - HTTP
Lambda functions - HTTP request is translated into a JSON event
IP addresses - must be Private

ALB can route to multiple target groups
Health checks are at the target group level

Write a rule in the ALB routing rules to redirect to the first target group for "?platform=mobile"

----------------------------------

Good to know

Fixed hostname (XXX.region.elb.amazonaws.com)
The application servers dont see the IP of the client directly
  the true IP of the client is inserted in the header X-Forwarded-For
  We can also get port (X-Forwarded-Port) and proto (X-Forwarded-Proto)


Our clients ip is directly talking to our load balancer who than does a connection termination to the ec2 instance.


-------------------

Hands-on

Launch EC2 instance (2)
Name
  1
  2
Amazon Linux
T2.Micro
No key pair needed
Select security group (Launch wizard 1) - this allows us to http and ssh into instance
Advanced details
  ADD user data
    #!/bin/bash
    # Use this for user data
    # install httpd linux 2 version
    yum update -y
    yum instal -y httpd
    systemctl start httpd
    systemctl enable httpd
    echo "<h1>Hello World from $(hostname -f)</h1>"> /var/www/index.html
Launch instances

instance 1 - 172-32-41-165
instance 2 - 172-32-17-199

Make a load balancer

Load balancers
create load balancer
Select type
  ALB
  NLB
  GLB
(Select ALB)
Name
Scheme
  internet facing
  internal
IP Adresses
  ipv4
  dualstack
Select VPC
Select AZ's
Assign security group (create a new one that only allows http traffic) (inbound rules http from anywhere)
Route traffic
  (Create target group) 
    Instances
    IP addresses
    Lambda
    Application Load Balancer
  Name
  protocol (http port 80)
  Select version
    http 1
    http 2
  Health checks allowed
  next
  register targets
  on port (80)
  include as pending below
  create target group
Select Target group
make sure on port 80
launch load balancer

-------------------------

target group

(Create target group) 
    Instances
    IP addresses
    Lambda
    Application Load Balancer
  Name
  protocol (http port 80)
  Select version
    http 1
    http 2
  Health checks allowed
  next
  register targets
  on port (80)
  include as pending below
  create target group

--------------------

Select Load balancer
Select DNS name, and now there is a new target sometimes (rotating between instances)

---------------

Advanced concepts

(to only access ec2 from load balancer

Select instance
select security group
edit
Inbound rules
  add rule
  Select Type (HTTP)
  Select IP to Security group (ALB)
Create Security group
Now the load balancer can only access the instance because of the inbound from only the security from the application load balancer

----------------------------------------------------

ALB Rules

Select ALB
Select listener
  Select add rule
  Name
  Conditions (What do we want to filter into the request for this role?)
    Host headers 
    Path (/error)
    HTTP request method 
    Source IP 
      HTTP Header
      Query String
  Next
  Actions
  Select Action Type
    Forwarded to target groups  
      Select target group
    Redirect to URL
      URI PARTS
      FULL URL
        HTTP
        HTTPS
          PORT
            Status code
              Customize host path and query  
    return fixed response
      Response code (404)
      content type (text/plain)
      Message (error 404)
  Next
  Priority of 5
  Next

------------------------------------

Now the results should have your status code

      
    


  




